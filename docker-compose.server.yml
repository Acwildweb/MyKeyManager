# =========================================================================
# MyKeyManager - Docker Compose per Server Esterno
# Versione Produzione con Porte e Rete Configurabili
# =========================================================================

# CONFIGURAZIONE VARIABILI D'AMBIENTE:
# Crea un file .env nella stessa directory con i tuoi valori personalizzati

services:
  # PostgreSQL Database
  db:
    image: postgres:14-alpine
    container_name: ${CONTAINER_PREFIX:-mykeymanager}-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-mykeymanager}
      POSTGRES_USER: ${POSTGRES_USER:-mykeymanager}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-SecurePass123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Backup automatico (opzionale)
      # - ./backups:/backups
    ports:
      - "${DB_PORT:-5432}:5432"
    restart: unless-stopped
    networks:
      - ${NETWORK_NAME:-mykeymanager-network}
    # Limiti di risorse per server condivisi
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ${CONTAINER_PREFIX:-mykeymanager}-redis
    volumes:
      - redis_data:/data
      # Configurazione Redis personalizzata (opzionale)
      # - ./redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "${REDIS_PORT:-6379}:6379"
    restart: unless-stopped
    networks:
      - ${NETWORK_NAME:-mykeymanager-network}
    # Comando per configurazione produzione
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Backend API
  backend:
    image: acwild/mykeymanager-backend:${BACKEND_VERSION:-v1.1.3}
    container_name: ${CONTAINER_PREFIX:-mykeymanager}-backend
    depends_on:
      - db
      - redis
    environment:
      # Database
      DATABASE_URL: postgresql://${POSTGRES_USER:-mykeymanager}:${POSTGRES_PASSWORD:-SecurePass123}@${CONTAINER_PREFIX:-mykeymanager}-db:5432/${POSTGRES_DB:-mykeymanager}
      REDIS_URL: redis://${CONTAINER_PREFIX:-mykeymanager}-redis:6379
      
      # Sicurezza - CAMBIA QUESTI VALORI IN PRODUZIONE!
      SECRET_KEY: ${SECRET_KEY:-change-this-secret-key-in-production}
      
      # CORS - Configura per il tuo dominio
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost:${FRONTEND_PORT:-8080}}
      CORS_ORIGINS: ${CORS_ORIGINS:-["http://localhost:${FRONTEND_PORT:-8080}"]}
      
      # App
      APP_VERSION: ${BACKEND_VERSION:-v1.1.3}
      
      # Email SMTP (opzionale)
      SMTP_HOST: ${SMTP_HOST:-}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER:-}
      SMTP_PASSWORD: ${SMTP_PASSWORD:-}
      SMTP_TLS: ${SMTP_TLS:-true}
      
    ports:
      - "${BACKEND_PORT:-8001}:8000"
    restart: unless-stopped
    networks:
      - ${NETWORK_NAME:-mykeymanager-network}
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Frontend Web Interface
  frontend:
    image: acwild/mykeymanager-frontend:${FRONTEND_VERSION:-v1.1.2}
    container_name: ${CONTAINER_PREFIX:-mykeymanager}-frontend
    depends_on:
      - backend
    environment:
      # Configura l'URL dell'API - IMPORTANTE per server esterno!
      VITE_API_URL: ${API_URL:-http://localhost:${BACKEND_PORT:-8001}/api}
      VITE_APP_VERSION: ${FRONTEND_VERSION:-v1.1.2}
    ports:
      - "${FRONTEND_PORT:-8080}:80"
    restart: unless-stopped
    networks:
      - ${NETWORK_NAME:-mykeymanager-network}
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

volumes:
  postgres_data:
    name: ${CONTAINER_PREFIX:-mykeymanager}_postgres_data
    # Per backup esterni su NFS/storage condiviso:
    # driver: local
    # driver_opts:
    #   type: nfs
    #   o: addr=your-nfs-server,rw
    #   device: ":/path/to/storage"
    
  redis_data:
    name: ${CONTAINER_PREFIX:-mykeymanager}_redis_data

networks:
  # Rete personalizzabile
  mykeymanager-network:
    name: ${NETWORK_NAME:-mykeymanager-network}
    driver: bridge
    # Per reti personalizzate:
    # external: true
    # Oppure configurazione avanzata:
    # ipam:
    #   config:
    #     - subnet: 172.20.0.0/16
