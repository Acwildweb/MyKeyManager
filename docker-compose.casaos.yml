# =========================================================================
# MyKeyManager - Docker Compose per CasaOS ARM64
# Usa immagini Docker Hub multi-architettura - Ottimizzato per ARM
# =========================================================================

services:
  # Database PostgreSQL
  database:
    image: postgres:15-alpine
    container_name: mykeymanager-db
    environment:
      POSTGRES_DB: mykeymanager
      POSTGRES_USER: mykeymanager
      POSTGRES_PASSWORD: MyKey2024!Secure
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mykeymanager -d mykeymanager"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mykeymanager

  # Backend API - Immagine Docker Hub multi-arch
  backend:
    image: acwild/mykeymanager-backend:latest
    container_name: mykeymanager-api
    environment:
      # Database Configuration
      DATABASE_URL: postgresql://mykeymanager:MyKey2024!Secure@database:5432/mykeymanager
      POSTGRES_HOST: database
      POSTGRES_PORT: 5432
      POSTGRES_DB: mykeymanager
      POSTGRES_USER: mykeymanager
      POSTGRES_PASSWORD: MyKey2024!Secure
      
      # Security
      SECRET_KEY: MyKeyManager-Production-Secret-2024-Change-This
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 480
      
      # CORS - Aggiorna con l'IP del tuo server CasaOS
      ALLOWED_ORIGINS: "http://localhost:8080,http://localhost:80,http://127.0.0.1:8080,http://127.0.0.1:80,http://YOUR_SERVER_IP:8080"
      
      # Rate Limiting (senza Redis)
      RATE_LIMIT: "100/hour"
      
      # SMTP Configuration (opzionale)
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 587
      SMTP_FROM: noreply@yourdomain.com
    ports:
      - "8001:8000"
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s
    networks:
      - mykeymanager

  # Frontend Web - Immagine Docker Hub multi-arch
  frontend:
    image: acwild/mykeymanager-frontend:latest
    container_name: mykeymanager-web
    environment:
      VITE_API_URL: http://YOUR_SERVER_IP:8001
    ports:
      - "8080:80"
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - mykeymanager

# Volumi persistenti
volumes:
  postgres_data:
    driver: local

# Rete interna
networks:
  mykeymanager:
    driver: bridge
    name: mykeymanager-network
